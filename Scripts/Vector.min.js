var AntColony=(function(b){function a(c,d){this.x=c;this.y=d}a.prototype.add=function(c){this.x+=c.x;this.y+=c.y};a.prototype.length=function(){return Math.sqrt((this.x*this.x)+(this.y*this.y))};a.prototype.multiply=function(c){this.x*=c;this.y*=c};a.prototype.scale=function(c){var e=this.length(),d=e===0?0:c/e;this.multiply(d)};a.prototype.setAngle=function(d){var c=this.length();this.x=Math.cos(d)*c;this.y=Math.sin(d)*c};a.subtract2=function(d,c){if(!(d instanceof a)||!(c instanceof a)){throw new Exception("a and b must be vectors")}return new a(d.x-c.x,d.y-c.y)};a.distanceBetween=function(e,c){if(!(e instanceof a)||!(c instanceof a)){throw new Exception("a and b must be Vectors")}var f=e.x-c.x,d=e.y-c.y;return Math.sqrt((f*f)+(d*d))};a.squaredDistanceBetween=function(e,c){if(!(e instanceof a)||!(c instanceof a)){throw new Exception("a and b must be Vectors")}var f=e.x-c.x,d=e.y-c.y;return(f*f)+(d*d)};a.average=function(f){if(f.length===0){return new a(0,0)}var d=new a(f[0].x,f[0].y),c,e;for(c=1,e=f.length;c<e;c++){d.add(f[c])}d.multiply(1/e);return d};a.withinDistance=function(f,e,c){if(!(f instanceof a)||!(e instanceof a)){throw new Exception("v1 and v2 must be vectors")}if(Math.abs(f.x-e.x)>c){return false}if(Math.abs(f.y-e.y)>c){return false}c=(c*c);return a.squaredDistanceBetween(f,e)<=c};b.Vector=a;return b}(AntColony||{}));